---
- name: Percona-XtraCluster-DB install 
  hosts: controller
  become: true
  vars_files:
    - /root/okestroiaas/variable/common_vars/main.yml
  tasks:
  - name: dnf module disable mysql
    command: dnf module disable -y mysql

  - name: install percona-xtradb-cluster-server-5.7
    yum:
      name: 
         - Percona-XtraDB-Cluster-57
         - python3-PyMySQL
      state: present
    register: mysql
    tags: mysql

  - name: service enabled mysql
    systemd:
      name: mysql.service
      enabled: yes
      masked: no
    when: mysql is changed
    tags: mysql

  - name: kill mysql daemon
    shell: kill -9 `ps -ef | grep mysql | awk '{print $2}'`
    ignore_errors: yes


  - name: service start
    systemd:
      name: mysql.service
      state: started
    tags: mysql

  - name: find password
    shell:
      cmd: |
        echo "#!/bin/bash" > /tmp/password.sh
        echo "var1=\`cat /var/log/mysqld.log | grep 'temporary password'\`" >> /tmp/password.sh
        echo "password=\`echo \${var1:(-12)}\`"  >> /tmp/password.sh
        echo "echo \$password" >> /tmp/password.sh
        chmod o+x /tmp/password.sh
         /tmp/password.sh
    tags: sql

  - name: copy my.cnf file
    shell:
      cmd: |
        /tmp/password.sh > /tmp/password
        password=`cat /tmp/password`
        echo "[client]" > /root/.my.cnf
        echo "host=0.0.0.0" >> /root/.my.cnf
        echo "user=root" >> /root/.my.cnf
        echo "port=3306" >> /root/.my.cnf
        echo "password=$password" >> /root/.my.cnf
        chmod u+rw /root/.my.cnf
    tags: sql


#  - name: craete password variable
#    shell:
#      cmd: /tmp/password.sh
#    register: password
#    tags: sql

  - shell: cat /var/log/mysqld.log | grep "temporary password" | grep -oE '[^ ]+$'
    register: tmp_root_password
    tags: sql

  - name: Detect and properly set root password
    command: ls /root/.my.cnf
    register: register_password
    tags: sql

  - name: mysql stop
    service:
      name: mysql
      state: stopped

  - name: mysqld_safe
    shell: mysqld_safe --skip-grant-tables &
    ignore_errors: yes

  - name: mysql max connecion expand
    shell: 'mysql -e "set global max_connections=65535;" --connect-expired-password -uroot -p"{{ tmp_root_password.stdout }}"'

  - name: Set new password from temporary password
    shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ db_password }}'');" --connect-expired-password -uroot -p"{{ tmp_root_password.stdout }}"'
    tags: sql
    ignore_errors: yes

  - name: kill mysql daemon
    shell: kill -9 `ps -ef | grep mysql | awk '{print $2}'`
    ignore_errors: yes

  - name: restart mysql
    service:
      name: mysql
      state: started
    tags: sql



#  - name: find password
#    shell: 
#      cmd: |
#        echo "#!/bin/bash" > /tmp/password.sh
#        echo "var1=\`cat /var/log/mysqld.log | grep 'temporary password'\`" >> /tmp/password.sh
#        echo "password=\`echo \${var1:(-12)}\`"  >> /tmp/password.sh
#        echo "echo \$password" >> /tmp/password.sh
#        chmod o+x /tmp/password.sh 
#         /tmp/password.sh
#    tags: shell
#
#  - name: craete password variable
#    shell:
#      cmd: /tmp/password.sh
#    register: password
#    tags: password
#
#  - name: copy my.cnf file
#    shell:
#      cmd: |
#        /tmp/password.sh > /tmp/password 
#        password=`cat /tmp/password`
#        echo "[client]" > /root/.my.cnf
#        echo "host=0.0.0.0" >> /root/.my.cnf
#        echo "user=root" >> /root/.my.cnf
#        echo "port=3306" >> /root/.my.cnf
#        echo "password=$password" >> /root/.my.cnf
#        chmod u+rw /root/.my.cnf   
#    tags: password
#
#  - name: sql query
#    shell:
#      cmd: |
#        MYSQL_PWD=`cat /tmp/password`  
#        mysql -u root --password=$MYSQL_PWD --execute="UPDATE mysql.user SET authentication_string = PASSWORD('{{ db_password }}') WHERE User = 'root' AND Host = 'localhost';" --connect-expired-password
#    tags: sql
#  - name: sql query
#    shell:
#      cmd: |
#        MYSQL_PWD=`cat /tmp/password`  
#        mysql -u root --password=$MYSQL_PWD --execute="UPDATE mysql.user SET authentication_string = PASSWORD('{{ db_password }}') WHERE User = 'root' AND Host = '{{ ansible_hostname }}';" --connect-expired-password
#    tags: sql
#  - name: sql query  
#    shell:
#      cmd: |
#        MYSQL_PWD=`cat /tmp/password`  
#        mysql -u root --password=$MYSQL_PWD --execute="UPDATE mysql.user SET authentication_string = PASSWORD('{{ db_password }}') WHERE User = 'root' AND Host = '::1';" --connect-expired-password
#    tags: sql
#  - name: sql query flush
#    shell:
#      cmd: |
#        MYSQL_PWD=`cat /tmp/password`  
#        mysql -u root --password=$MYSQL_PWD --execute="FLUSH PRIVILEGES" --connect-expired-password
#    tags: sql
#  - name: restart MySQL
#    systemd: 
#      name: mysqld 
#      state=: restarted
#    tags: sql
#

  - name: copy my.cnf2 file
    template:
      src: "{{ template_files }}"
      dest: /root/.my.cnf
      owner: root
      group: root
      mode: 0600
    with_items:
      ['root_my.cnf.j2']
    tags: sql


  - name: Update mysql root password for all root accounts
    mysql_user:
      name: root
      host: "{{ item }}"
      password: "{{ db_password }}"
      login_user: root
      login_password: "{{ db_password }}"
      check_implicit_admin: yes
      priv: '*.*:ALL,GRANT'
    with_items:
      - 127.0.0.1
      - ::1
      - localhost
      - "{{ ansible_hostname }}"
    tags: sql

  - name: mysql max connecion expand
    shell: mysql -u root --password=cloud1234 --execute="set global max_connections=30000;"

